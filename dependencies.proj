<?xml version="1.0" encoding="utf-8"?>
<!-- msbuild project for build the OpenRCT2 3rd party libraries -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="CreatePkg">
  <PropertyGroup>
    <RootDir>$(MsBuildThisFileDirectory)</RootDir>
    <ArtifactsDir>$(RootDir)artifacts\</ArtifactsDir>
    <IncludeDir>$(ArtifactsDir)include\</IncludeDir>
    <PlatformToolset Condition="'$(PlatformToolset)'==''">v140</PlatformToolset>
    <BinDir>$(RootDir)bin\</BinDir>
    <OutputLib32>$(ArtifactsDir)openrct2-libs-vs2015-x86.lib</OutputLib32>
    <OutputLib64>$(ArtifactsDir)openrct2-libs-vs2015-x64.lib</OutputLib64>
    <OutputLib Condition="'$(Platform)'=='Win32'">$(OutputLib32)</OutputLib>
    <OutputLib Condition="'$(Platform)'=='x64'">$(OutputLib64)</OutputLib>
    <OutputZip>$(ArtifactsDir)openrct2-libs-vs2015.zip</OutputZip>
  </PropertyGroup>

  <Target Name="Clean">
    <Message Text="Cleaning up git repository..." Importance="high" />
    <Exec Command="git clean -fdX"
          StandardOutputImportance="normal" />
    <Exec Command="git submodule foreach &quot;git clean -fdx &amp;&amp; git checkout .&quot;"
          StandardOutputImportance="normal" />
  </Target>

  <Target Name="CreatePkg" Inputs="$(OutputZip)" Outputs="$(OutputZip)">
    <CallTarget Targets="Clean" />
    <MSBuild Projects="$(RootDir)dependencies.proj" Targets="Build" Properties="Platform=Win32" />

    <Copy SourceFiles="$(OutputLib32)" DestinationFiles="$(RootDir)temp.lib" />

    <CallTarget Targets="Clean" />
    <MSBuild Projects="$(RootDir)dependencies.proj" Targets="Build" Properties="Platform=x64" />

    <Move SourceFiles="$(RootDir)temp.lib" DestinationFiles="$(OutputLib32)" />

    <CallTarget Targets="CopyHeaders" />
    <Exec Command="7z a -tzip -mx9 -mtc=off &quot;$(OutputZip)&quot; &quot;$(ArtifactsDir)*&quot;"
          StandardOutputImportance="normal" />
  </Target>

  <Target Name="Build" DependsOnTargets="breakpad;libcurl;libspeexdsp;freetype2;jansson;sdl2;sdl2_ttf;libpng;openssl"
          Inputs="$(OutputLib)" Outputs="$(OutputLib)">
    <ItemGroup>
      <Libs Include="$(BinDir)*.lib" />
    </ItemGroup>
    <PropertyGroup>
      <LibExe Condition="'$(Platform)'=='Win32'">C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\lib.exe</LibExe>
      <LibExe Condition="'$(Platform)'=='x64'">C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\lib.exe</LibExe>
    </PropertyGroup>
    <MakeDir Directories="$(ArtifactsDir)" />
    <Exec Command="&quot;$(LibExe)&quot; /LTCG &quot;/OUT:$(OutputLib)&quot; @(Libs -> '&quot;%(Identity)&quot;', ' ')"
          StandardOutputImportance="low"
          IgnoreStandardErrorWarningFormat="true" />
  </Target>

  <ItemGroup>
    <BreakpadOutputItems Include="$(RootDir)src\breakpad\src\src\client\windows\Release\lib\common.lib" />
    <BreakpadOutputItems Include="$(RootDir)src\breakpad\src\src\client\windows\Release\lib\crash_generation_client.lib" />
    <BreakpadOutputItems Include="$(RootDir)src\breakpad\src\src\client\windows\Release\lib\exception_handler.lib" />
    <BreakpadOutputItems Include="$(RootDir)src\breakpad\src\src\client\windows\Release\lib\crash_report_sender.lib" />
  </ItemGroup>
  <Target Name="breakpad" Inputs="$(RootDir)src\breakpad\src\src\client\windows\Release\lib\common.lib" Outputs="@(BreakpadOutputItems)">
    <MSBuild Projects="$(RootDir)src\breakpad\src\src\client\windows\breakpad_client.sln" Properties="Configuration=Release" ContinueOnError="true" />
    <Copy SourceFiles="@(BreakpadOutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="libcurl" Inputs="$(BinDir)libcurl.lib" Outputs="$(BinDir)libcurl.lib">
    <ItemGroup>
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)src\curl\build\Win32\VC14\LIB Release - DLL Windows SSPI\libcurl.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)src\curl\build\Win64\VC14\LIB Release - DLL Windows SSPI\libcurl.lib" />
    </ItemGroup>
    <Exec Command="git apply --ignore-whitespace --directory=src\curl patches\curl.diff"
          IgnoreStandardErrorWarningFormat="true"
          StandardOutputImportance="normal"
          StandardErrorImportance="normal"
          ContinueOnError="true" />
    <Exec Command="$(RootDir)src\curl\projects\generate.bat VC14" />
    <MSBuild Projects="$(RootDir)src\curl\projects\Windows\VC14\lib\libcurl.sln" Properties="Configuration=LIB Release - DLL Windows SSPI" />
    <Copy SourceFiles="@(OutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="libspeexdsp" Inputs="$(BinDir)libspeexdsp.lib" Outputs="$(BinDir)libspeexdsp.lib">
    <ItemGroup>
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)vsprojects\speexdsp\bin\libspeexdsp.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)vsprojects\speexdsp\bin64\libspeexdsp.lib" />
    </ItemGroup>
    <MSBuild Projects="$(RootDir)vsprojects\speexdsp\libspeexdsp.sln" Properties="Configuration=Release Static;Platform=$(Platform)" />
    <Copy SourceFiles="@(OutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="freetype2" Inputs="$(BinDir)freetype.lib" Outputs="$(BinDir)freetype.lib">
    <ItemGroup Condition="'$(Platform)'=='Win32'">
      <OutputItems2 Include="$(RootDir)src\freetype2\objs\vc2010\Win32\freetype*.lib" />
    </ItemGroup>
    <ItemGroup Condition="'$(Platform)'=='x64'">
      <OutputItems2 Include="$(RootDir)src\freetype2\objs\vc2010\x64\freetype*.lib" />
    </ItemGroup>
    <MSBuild Projects="$(RootDir)src\freetype2\builds\windows\vc2010\freetype.sln" Properties="Configuration=Release Multithreaded;PlatformToolset=$(PlatformToolset)" />
    <Copy SourceFiles="@(OutputItems2)" DestinationFiles="$(BinDir)freetype.lib" />
  </Target>

  <Target Name="jansson" Inputs="$(BinDir)jansson.lib" Outputs="$(BinDir)jansson.lib">
    <PropertyGroup>
      <ArchitectureParam Condition="'$(Platform)'=='x64'">-A x64</ArchitectureParam>
    </PropertyGroup>
    <Exec Command="cmake -B$(RootDir)src\jansson\ -H$(RootDir)src\jansson\ -G &quot;Visual Studio 14&quot; $(ArchitectureParam) -DJANSSON_STATIC_CRT=ON -DJANSSON_BUILD_DOCS=OFF"
          StandardOutputImportance="normal"
          StandardErrorImportance="normal" />
    <MSBuild Projects="$(RootDir)src\jansson\jansson.sln" Properties="Configuration=Release" />
    <Copy SourceFiles="$(RootDir)src\jansson\lib\Release\jansson.lib" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="sdl2" Inputs="$(BinDir)SDL2_ttf.lib" Outputs="$(BinDir)SDL2_ttf.lib">
    <ItemGroup>
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)src\sdl\VisualC\SDL\Win32\Release\SDL2.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)src\sdl\VisualC\SDL\x64\Release\SDL2.lib" />
    </ItemGroup>
    <Exec Command="git apply --ignore-whitespace --directory=src\sdl patches\sdl.diff"
          IgnoreStandardErrorWarningFormat="true"
          StandardOutputImportance="normal"
          StandardErrorImportance="normal"
          ContinueOnError="true" />
    <MSBuild Projects="$(RootDir)src\sdl\VisualC\SDL\SDL.vcxproj" Properties="Configuration=Release;PlatformToolset=$(PlatformToolset)" />
    <Copy SourceFiles="@(OutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="sdl2_ttf" Inputs="$(BinDir)SDL2_ttf.lib" Outputs="$(BinDir)SDL2_ttf.lib">
    <ItemGroup>
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)src\sdl_ttf\VisualC\Win32\Release\SDL2_ttf.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)src\sdl_ttf\VisualC\x64\Release\SDL2_ttf.lib" />
    </ItemGroup>
    <Exec Command="git apply --ignore-whitespace --directory=src\sdl_ttf patches\sdl_ttf.diff"
          IgnoreStandardErrorWarningFormat="true"
          StandardOutputImportance="normal"
          StandardErrorImportance="normal"
          ContinueOnError="true" />
    <MSBuild Projects="$(RootDir)src\sdl_ttf\VisualC\SDL_ttf.vcxproj" Properties="Configuration=Release;PlatformToolset=$(PlatformToolset)" />
    <Copy SourceFiles="@(OutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="libpng" Inputs="$(BinDir)zlib.lib" Outputs="$(BinDir)zlib.lib;$(BinDir)libpng16.lib">
    <ItemGroup>
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)src\libpng\projects\vstudio\Release Library\zlib.lib" />
      <OutputItems Condition="'$(Platform)'=='Win32'" Include="$(RootDir)src\libpng\projects\vstudio\Release Library\libpng16.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)src\libpng\projects\vstudio\x64\Release Library\zlib.lib" />
      <OutputItems Condition="'$(Platform)'=='x64'" Include="$(RootDir)src\libpng\projects\vstudio\x64\Release Library\libpng16.lib" />
    </ItemGroup>
    <Exec Command="git apply --ignore-whitespace --directory=src\libpng patches\libpng.diff"
          IgnoreStandardErrorWarningFormat="true"
          StandardOutputImportance="normal"
          StandardErrorImportance="normal"
          ContinueOnError="true" />
    <MSBuild Projects="$(RootDir)src\libpng\projects\vstudio\vstudio.sln" Properties="Configuration=Release Library" />
    <Copy SourceFiles="@(OutputItems)" DestinationFolder="$(BinDir)" />
  </Target>

  <Target Name="openssl" Inputs="$(BinDir)libeay32.lib" Outputs="$(BinDir)libeay32.lib">
    <PropertyGroup>
      <TempDir>$(RootDir)temp\</TempDir>
      <OpenSSLVersion>1.0.2j</OpenSSLVersion>
      <OpenSSLDownloadUrl>http://www.npcglib.org/~stathis/downloads/openssl-$(OpenSSLVersion)-vs2015.7z</OpenSSLDownloadUrl>
      <OpenSSLDownloadOut>$(RootDir)temp\openssl-precompiled.7z</OpenSSLDownloadOut>
    </PropertyGroup>
    <Message Text="Downloading precompiled openssl..." Importance="high" />
    <RemoveDir Directories="temp" />
    <MakeDir Directories="temp" />
    <Exec Command="powershell -ExecutionPolicy Unrestricted -Command &quot;Invoke-WebRequest '$(OpenSSLDownloadUrl)' -OutFile '$(OpenSSLDownloadOut)'&quot;"
          StandardOutputImportance="normal" />
    <Exec Command="7z x $(OpenSSLDownloadOut) -o$(TempDir)"
          StandardOutputImportance="normal" />
    <Copy SourceFiles="$(TempDir)openssl-$(OpenSSLVersion)-vs2015\lib\libeay32MT.lib" DestinationFiles="$(BinDir)libeay32.lib" />
    <Copy Condition="'$(Platform)'=='Win32'" SourceFiles="$(TempDir)openssl-$(OpenSSLVersion)-vs2015\lib\libeay32MT.lib" DestinationFiles="$(BinDir)libeay32.lib" />
    <Copy Condition="'$(Platform)'=='x64'" SourceFiles="$(TempDir)openssl-$(OpenSSLVersion)-vs2015\lib64\libeay32MT.lib" DestinationFiles="$(BinDir)libeay32.lib" />
    <RemoveDir Directories="temp" />
  </Target>

  <Target Name="CopyHeaders">
    <MakeDir Directories="$(IncludeDir)" />
    <Copy SourceFiles="%(HeaderItems.Identity)" DestinationFolder="$(IncludeDir)%(HeaderItems.Destination)" />
  </Target>

  <!-- Headers to include in the dependencies package -->
  <ItemGroup>
    <HeaderItems Include="src\breakpad\src\src\client\windows\handler\*.h">
      <Destination>breakpad\client\windows\handler</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\client\windows\sender\*.h">
      <Destination>breakpad\client\windows\sender</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\client\windows\common\*.h">
      <Destination>breakpad\client\windows\common</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\common\*.h">
      <Destination>breakpad\common</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\common\windows\*.h">
      <Destination>breakpad\common\windows</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\client\windows\crash_generation\*.h">
      <Destination>breakpad\client\windows\crash_generation</Destination>
    </HeaderItems>
    <HeaderItems Include="src\breakpad\src\src\google_breakpad\common\*.h">
      <Destination>breakpad\google_breakpad\common</Destination>
    </HeaderItems>
    <HeaderItems Include="src\sdl\include\*.h">
      <Destination>sdl</Destination>
    </HeaderItems>
    <HeaderItems Include="src\sdl_ttf\*.h">
      <Destination>sdl_ttf</Destination>
    </HeaderItems>
    <HeaderItems Include="src\libpng\png.h">
      <Destination>libpng</Destination>
    </HeaderItems>
    <HeaderItems Include="src\libpng\pngconf.h">
      <Destination>libpng</Destination>
    </HeaderItems>
    <HeaderItems Include="src\libpng\pnglibconf.h">
      <Destination>libpng</Destination>
    </HeaderItems>
    <HeaderItems Include="src\zlib\zlib.h">
      <Destination>zlib</Destination>
    </HeaderItems>
    <HeaderItems Include="src\zlib\zconf.h">
      <Destination>zlib</Destination>
    </HeaderItems>
    <HeaderItems Include="src\jansson\include\*.h">
      <Destination>jansson</Destination>
    </HeaderItems>
    <HeaderItems Include="src\speexdsp\include\speex\*.h">
      <Destination>libspeex\speex</Destination>
    </HeaderItems>
    <HeaderItems Include="src\curl\include\curl\*.h">
      <Destination>curl</Destination>
    </HeaderItems>
    <HeaderItems Include="src\openssl\include\openssl\*.h">
      <Destination>openssl</Destination>
    </HeaderItems>
  </ItemGroup>
</Project>
